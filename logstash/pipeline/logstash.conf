input {
	#tcp apache accesslogs stream via 5101
	tcp {
		port => 5101
		type => "apache_access_log"
	}
}

input {
		tcp {
		port => 5200
		type => "application_log"
		codec => "json"
	}
}

## Add your filters / logstash plugins configuration here
filter {
	if [type] == "apache_access_log" {
		grok {
			match => [ "message", "%{IP:client_ip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:apache_timestamp}\] \"%{WORD:method} /%{NOTSPACE:request_page} HTTP/%{NUMBER:http_version}\" %{NUMBER:server_response} %{NUMBER:content_lenth} \"%{DATA:referrer}\" \"%{DATA:user-agent}\" %{NOTSPACE:request_id}" ]
		}
		if [request_page] =~ /\w*\?op=\w*/ {
			grok {
  				match => [ "request_page", "(?<operation>(?<=op=)\S*)" ]
			}
		}
	}
	if [type] == "application_log" {
		aggregate {
	       task_id => "%{request_id}"
	       code => "map['operation'] = event.get('operation')"
	       map_action => "create"
	     }
    } else if [type] == "apache_access_log" and ![operation] {
     	aggregate {
       		task_id => "%{request_id}"
       		code => "event.set('operation' = map['operation'])"
       		map_action => "update"
       		end_of_task => true
      		timeout => 5
     	}
    }
}


output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
